{
  "name": "sizer",
  "version": "0.1.1",
  "description": "Filter files by size recursively",
  "main": "index.js",
  "scripts": {
    "test": "node test/index.js | node_modules/.bin/tspec"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/sizer.git"
  },
  "keywords": [
    "filter",
    "files",
    "size",
    "stat",
    "file"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/sizer/issues"
  },
  "devDependencies": {
    "tape": "~2.3.2",
    "tap-spec": "0.0.1"
  },
  "dependencies": {
    "shrub": "~0.2.0",
    "minimatch": "~0.2.14"
  },
  "readme": "# sizer\n \nFilter files by size recursively\n \n## Install\n \n```\nnpm install sizer --save\n```\n \n## Usage\n \n```js\nvar sizer = require('sizer');\n\nsizer.bigger(1000, __dirname, function (err, files) {\n  // files is a list of files bigger than 1000 bytes\n});\n```\n\n## Api\n\n### bigger(bytes, directory[, ignore], callback)\n\n* `bytes` - size in bytes to compare the files to\n* `directory` - the directory containing the files\n* `ignore` - (OPTIONAL) an array of files to ignore (uses [minimatch](https://github.com/isaacs/minimatch) to compare)\n* `callback` - gets called when call files have been compared\n\n### smaller(bytes, directory[, ignore], callback)\n\n* `bytes` - size in bytes to compare the files to\n* `directory` - the directory containing the files\n* `ignore` - (OPTIONAL) an array of files to ignore (uses [minimatch](https://github.com/isaacs/minimatch) to compare)\n* `callback` - gets called when call files have been compared\n \n## Run Tests\n \n```\nnpm install\nnpm test\n```",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/scottcorgan/sizer",
  "_id": "sizer@0.1.1",
  "_shasum": "55baaec9afe2120043c23e25cb036db8ccaf171a",
  "_from": "sizer@^0.1.1",
  "_resolved": "https://registry.npmjs.org/sizer/-/sizer-0.1.1.tgz"
}
