{
  "name": "divshot-push",
  "version": "1.0.3",
  "description": "Deploy files to the Divshot hosting platform",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/ --recursive"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/divshot/divshot-push.git"
  },
  "keywords": [
    "divshot",
    "push",
    "deploy"
  ],
  "author": {
    "name": "Divshot"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/divshot/divshot-push/issues"
  },
  "homepage": "https://github.com/divshot/divshot-push",
  "devDependencies": {
    "chai": "^1.9.2",
    "jshint": "^2.5.10",
    "mocha": "^2.0.1"
  },
  "dependencies": {
    "as-array": "^1.0.0",
    "ask": "^1.1.0",
    "async": "^0.9.0",
    "aws-sdk": "^2.0.23",
    "chalk": "^0.5.1",
    "fs-extra": "^0.12.0",
    "globby": "^0.1.1",
    "graceful-fs": "^3.0.4",
    "is-directory": "^0.2.2",
    "join-path": "^1.0.0",
    "merkle-dir": "git://github.com/divshot/merkle-dir",
    "mkdirp": "^0.5.0",
    "retry": "^0.6.1",
    "slash": "^1.0.0",
    "tmp": "0.0.24",
    "touch": "0.0.3"
  },
  "readme": "# divshot-push\n\nDeploy files to the Divshot hosting platform.\n\n## Install\n\n```\nnpm install divshot-push --save\n```\n\n## Usage\n\nThe following usage example pushes all files from the current directory up to Divshot.\n\n```js\nvar push = require('divshot-push');\n\nvar pushStatus = push({\n  root: process.cwd(),\n  environment: 'development',\n  config: {\n    name: 'app-name'\n  },\n  token: 'user auth token',\n});\n\npushStatus.onUpload('start', function () {\n  console.log('Upload started ...'); \n});\n\npushStatus.onUpload('end', function () {\n  console.log('Complete!');\n});\n```\n\n## API\n\n### push(options)\n\n* `options`\n  * `root` - REQUIRED: Full path the directory to push.\n  * `config` - REQUIRED: App configuration data.\n  * `token` - REQUIRED: User authentication token.\n  * `environment` - OPTIONAL: Environment to push to. Defaults to `development`.\n  * `timeout` - OPTIONAL: API http request timeout.\n\n### Push Status Events\n\nThe `push` method returns a set of event emitting methods to listen for various push status updates:\n\n#### onEnd(callback)\n\nThe full push process is complete.\n\n* `callback` - Function to execute on event.\n\n#### onError(callback)\n\nThere was an error pushing the app.\n\n* `callback` - Function to execute on event.\n\n#### onVerbose(callback)\n\nVerbose logging for debugging purposes.\n\n* `callback` - Function to execute on event.\n\n#### onUpload(event, callback)\n\nEvents emitted while uploading files.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted upload events:\n\n* `start` - Uploaded has started. Callback is given count of files to upload.\n* `progress` - Emitted on file uploaded. Callback is given number of files uplaoded for this progress event.\n* `end` - Upload complete.\n* `error` - Error uploading files. Callback is given error object.\n\n#### onBuild(event, callback)\n\nEvents emitted while creating an application build.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted build events:\n\n* `start` - Build has started.\n* `end` - Build complete. Callback is given the build object.\n\n#### onHashing(event, callback)\n\nEvents emitted while hashing files for syncing on Divshot's servers.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted hashing events:\n\n* `start` - Hashing has started.\n* `end` - Hashing is complete.\n\n#### onRelease(event, callback)\n\nEvents emitted while a release is being created.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted releasing events:\n\n* `start` - Releasing has started. Callback is passed the envrionment the app is being released to.\n* `end` - Releasing is complete.\n\n#### onFinalize(event, callback)\n\nEvents emitted while release is being finalized.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted finalizing events:\n\n* `start` - Finalizing has started.\n* `end` - Finalizing is complete.\n\n#### onApp(event, callback)\n\nEvents emitted if/when an app needs to be created before files are pushed.\n\n* `event` - Event to listen for.\n* `callback` - Function to execute on event.\n\nEmitted App events:\n\n* `create` - App is being created. Callback is passed the name of the app.\n* `end` - App has been created. Callback is passed the app object.\n",
  "readmeFilename": "README.md",
  "_id": "divshot-push@1.0.3",
  "_shasum": "5c8980d2ed2e0fcc130954df1810f2abd31b8931",
  "_from": "divshot-push@1.0.3",
  "_resolved": "https://registry.npmjs.org/divshot-push/-/divshot-push-1.0.3.tgz"
}
