{
  "name": "copy-files",
  "version": "0.1.0",
  "description": "Streaming file copier",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "mocha test/"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/scottcorgan/copy-files.git"
  },
  "keywords": [
    "copy",
    "stream",
    "files",
    "copies",
    "mv",
    "cp"
  ],
  "author": {
    "name": "Scott Corgan"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/scottcorgan/copy-files/issues"
  },
  "homepage": "https://github.com/scottcorgan/copy-files",
  "devDependencies": {
    "mocha": "^1.20.1",
    "chai": "^1.9.1"
  },
  "dependencies": {
    "async": "^0.9.0",
    "lodash": "^2.4.1",
    "mkdirp": "^0.5.0"
  },
  "readme": "# copy-files\n\nStreaming file copier\n\n## Install\n\n```\nnpm install copy-files --save\n```\n\n## Usage\n\n```js\nvar copy = require('copy-files');\n\ncopy({\n  files: {\n    'newname.txt': __dirname + '/path/to/source.txt'\n  },\n  dest: '/path/to/destination',\n}, function (err) {\n  // All copied!\n});\n```\n\n### copy(options, callback)\n\nAsync copy method using streams to copy files\n\n#### options\n\n* `files` - list of files to copy. The key is the copied file's name and the value is the file to copy\n* `dest` - the destination directory to copy the files to\n* `overwrite` - OPTIONAL - flag telling the copy method whether or not to overwrite existing files in `dest` directory. Defaults to *false*.\n\n## Run Tests\n\n```\nnpm install\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "_id": "copy-files@0.1.0",
  "_shasum": "fa38385dc047ef88193c1c61b6a253a8a427f116",
  "_from": "copy-files@^0.1.0",
  "_resolved": "https://registry.npmjs.org/copy-files/-/copy-files-0.1.0.tgz"
}
